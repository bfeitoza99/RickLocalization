// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RickLocalization.Data;

namespace RickLocalization.Data.Migrations
{
    [DbContext(typeof(RickLocalizationContext))]
    [Migration("20210425015830_initital_migration")]
    partial class initital_migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RickLocalization.Domain.Entities.Navigation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DimensionDestiny")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DimensionOrigin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RickId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RickId");

                    b.ToTable("Navigation");
                });

            modelBuilder.Entity("RickLocalization.Domain.Entities.Rick", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DimensionOriginName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rick");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Details = "Dimensão de origem de Rick e Morty, a dimensão C-137 é o universo no qual a Terra foi invadida por Cronenbergs",
                            DimensionOriginName = "C-137"
                        },
                        new
                        {
                            Id = 2,
                            Details = "A dimensão C-132 é um dos muitos universos no multiverso e foi o universo em que Rick e Morty dos dois primeiros volumes da série de quadrinhos Rick e Morty foram considerados",
                            DimensionOriginName = "C-132"
                        },
                        new
                        {
                            Id = 3,
                            Details = "A dimensão C-500A é uma dimensão alternativa, nesta dimensão, os irmãos Smith, Summer e Morty, nunca nasceram.",
                            DimensionOriginName = "C-500A"
                        });
                });

            modelBuilder.Entity("RickLocalization.Domain.Entities.Navigation", b =>
                {
                    b.HasOne("RickLocalization.Domain.Entities.Rick", "Rick")
                        .WithMany("Navigations")
                        .HasForeignKey("RickId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rick");
                });

            modelBuilder.Entity("RickLocalization.Domain.Entities.Rick", b =>
                {
                    b.Navigation("Navigations");
                });
#pragma warning restore 612, 618
        }
    }
}
